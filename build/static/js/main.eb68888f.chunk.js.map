{"version":3,"sources":["constants/actionTypes.js","api/index.js","assets/memories.png","components/Form/styles.js","components/Form/Form.js","actions/posts.js","components/Posts/styles.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/Posts.js","useAppStyles.js","App.js","reportWebVitals.js","reducers/posts.js","reducers/index.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","useFormStyles","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","Form","currentId","setCurrentId","classes","dispatch","useDispatch","post","useSelector","state","posts","find","p","_id","useState","creator","title","message","tags","selectedFile","postData","setPostData","useEffect","clear","Paper","className","autoComplete","noValidate","onSubmit","e","preventDefault","a","api","data","type","payload","console","log","newPost","createPost","Typography","variant","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","Button","color","size","onClick","usePostsStyles","mainContainer","alignItems","smMargin","actionDiv","textAlign","usePostStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","flexDirection","borderRadius","position","overlay","top","left","overlay2","right","grid","details","cardActions","Post","Card","CardMedia","image","moment","createdAt","fromNow","style","fontSize","map","tag","gutterBottom","CardContent","CardActions","likeCount","Posts","length","Grid","container","xs","sm","item","CircularProgress","useAppStyles","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxwidth","AppBar","align","src","memories","alt","Grow","in","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","filter","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAaA,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAY,Y,iBCAnBC,EAAM,qDAICC,EAAa,SAACC,EAAIC,GAAL,OAAqBC,IAAMC,MAAN,UAAeL,EAAf,YAAsBE,GAAMC,IAC9DG,EAAa,SAACJ,GAAD,OAAQE,IAAMG,OAAN,UAAgBP,EAAhB,YAAuBE,KAC5CM,EAAW,SAACN,GAAD,OAAQE,IAAMC,MAAN,UAAeL,EAAf,YAAsBE,EAAtB,eCTjB,MAA0B,qC,iBCE5BO,EAAgBC,aAAW,SAACC,GAAD,MAAY,CAChDC,KAAM,CACF,uBAAwB,CACtBC,OAAQF,EAAMG,QAAQ,KAG1BC,MAAO,CACLC,QAASL,EAAMG,QAAQ,IAEzBG,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,eAAgB,UAElBC,UAAW,CACTC,MAAO,MACPT,OAAQ,UAEVU,aAAc,CACZC,aAAc,Q,2CCbf,SAASC,EAAT,GAA0C,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,aACvBC,EAAUnB,IACVoB,EAAWC,cACXC,EAAOC,aAAY,SAACC,GAAD,OAAUP,EAAYO,EAAMC,MAAMC,MAAK,SAACC,GAAD,OAAOA,EAAEC,MAAQX,KAAa,QAHlD,EAIZY,mBAAS,CAACC,QAAS,GAAIC,MAAO,GAAIC,QAAS,GAAIC,KAAM,GAAIC,aAAc,KAJ3D,mBAIrCC,EAJqC,KAI3BC,EAJ2B,KAM5CC,qBAAU,WACHf,GAAMc,EAAYd,KACtB,CAACA,IAEJ,IAaMgB,EAAQ,WACVpB,EAAa,MACbkB,EAAY,CAACN,QAAS,GAAIC,MAAO,GAAIC,QAAS,GAAIC,KAAM,GAAIC,aAAc,MAE9E,OACI,cAACK,EAAA,EAAD,CAAOC,UAAWrB,EAAQb,MAA1B,SACI,uBAAMmC,cAAc,EAAOC,YAAU,EAACF,UAAWrB,EAAQX,KAAMmC,SAnBlD,SAACC,GAClBA,EAAEC,iBAGEzB,EADDH,ECIe,SAACxB,EAAI6B,GAAL,8CAAc,WAAOF,GAAP,iBAAA0B,EAAA,+EAEXC,EAAetD,EAAG6B,GAFP,gBAEzB0B,EAFyB,EAEzBA,KAEP5B,EAAS,CAAE6B,KAAM7D,EAAS8D,QAASF,IAJH,gDAOhCG,QAAQC,IAAR,MAPgC,yDAAd,sDDHL5D,CAAWyB,EAAUkB,GCPhB,SAACb,GAAD,8CAAU,WAAOF,GAAP,iBAAA0B,EAAA,+EJTTO,EIWiB/B,EJXL3B,IAAM2B,KAAK/B,EAAK8D,GISnB,gBAErBL,EAFqB,EAErBA,KAEP5B,EAAS,CAAC6B,KAAM9D,EAAQ+D,QAASF,IAJL,gDAM5BG,QAAQC,IAAR,MAN4B,kCJTV,IAACC,IISS,oBAAV,sDDSLC,CAAWnB,IAGxBG,KAUI,UACI,eAACiB,EAAA,EAAD,CAAYC,QAAQ,KAApB,UAA2BvC,EAAY,UAAY,WAAnD,eACA,cAACwC,EAAA,EAAD,CAAWC,KAAK,UAAUF,QAAQ,WAAWG,MAAM,UAAUC,WAAS,EAACC,MAAO1B,EAASL,QAASgC,SAAU,SAAClB,GAAD,OAAOR,EAAY,2BAAID,GAAL,IAAeL,QAASc,EAAEmB,OAAOF,YAC7J,cAACJ,EAAA,EAAD,CAAWC,KAAK,QAAQF,QAAQ,WAAWG,MAAM,QAAQC,WAAS,EAACC,MAAO1B,EAASJ,MAAO+B,SAAU,SAAClB,GAAD,OAAOR,EAAY,2BAAID,GAAL,IAAeJ,MAAOa,EAAEmB,OAAOF,YACrJ,cAACJ,EAAA,EAAD,CAAWC,KAAK,UAAUF,QAAQ,WAAWG,MAAM,UAAUC,WAAS,EAACC,MAAO1B,EAASH,QAAS8B,SAAU,SAAClB,GAAD,OAAOR,EAAY,2BAAID,GAAL,IAAeH,QAASY,EAAEmB,OAAOF,YAC7J,cAACJ,EAAA,EAAD,CAAWC,KAAK,OAAOF,QAAQ,WAAWG,MAAM,OAAOC,WAAS,EAACC,MAAO1B,EAASF,KAAM6B,SAAU,SAAClB,GAAD,OAAOR,EAAY,2BAAID,GAAL,IAAeF,KAAMW,EAAEmB,OAAOF,MAAMG,MAAM,WAC7J,qBAAKxB,UAAWrB,EAAQP,UAAxB,SACI,cAAC,IAAD,CACIqC,KAAK,OACLgB,UAAU,EACVC,OAAQ,gBAAEC,EAAF,EAAEA,OAAF,OAAc/B,EAAY,2BAAID,GAAL,IAAeD,aAAciC,UAGtE,cAACC,EAAA,EAAD,CACI5B,UAAWrB,EAAQL,aACnB0C,QAAQ,YACRa,MAAM,UACNC,KAAK,QACLrB,KAAK,SACLW,WAAS,EANb,sBAQA,cAACQ,EAAA,EAAD,CAAQZ,QAAQ,YAAYa,MAAM,YAAYC,KAAK,QAAQV,WAAS,EAACW,QAASjC,EAA9E,wBExDT,IAAMkC,EAAiBvE,aAAW,SAACC,GAAD,MAAY,CACjDuE,cAAe,CACXhE,QAAS,OACTiE,WAAY,UAEdC,SAAU,CACRvE,OAAQF,EAAMG,QAAQ,IAExBuE,UAAW,CACTC,UAAW,cCTNC,EAAgB7E,aAAW,SAACC,GAAD,MAAY,CAClD6E,MAAO,CACDC,OAAQ,EACRC,WAAY,SACZC,gBAAiB,qBACjBC,oBAAqB,UAEvBC,OAAQ,CACNA,OAAQ,SAEVC,eAAgB,CACdL,OAAQ,QAEVM,KAAM,CACJ7E,QAAS,OACT8E,cAAe,SACf5E,eAAgB,gBAChB6E,aAAc,OACdR,OAAQ,OACRS,SAAU,YAEZC,QAAS,CACPD,SAAU,WACVE,IAAK,OACLC,KAAM,OACNvB,MAAO,SAETwB,SAAU,CACRJ,SAAU,WACVE,IAAK,OACLG,MAAO,OACPzB,MAAO,SAET0B,KAAM,CACJtF,QAAS,QAEXuF,QAAS,CACPvF,QAAS,OACTE,eAAgB,gBAChBP,OAAQ,QAEV2B,MAAO,CACLxB,QAAS,UAEX0F,YAAa,CACX1F,QAAS,kBACTE,QAAS,OACTE,eAAgB,qB,wGCtCjB,SAASuF,EAAT,GAAqC,IAAtB5E,EAAqB,EAArBA,KAAMJ,EAAe,EAAfA,aAClBC,EAAU2D,IACV1D,EAAWC,cACjB,OACI,eAAC8E,EAAA,EAAD,CAAM3D,UAAWrB,EAAQmE,KAAzB,UACI,cAACc,EAAA,EAAD,CAAW5D,UAAWrB,EAAQ4D,MAAOsB,MAAO/E,EAAKY,aAAcH,MAAOT,EAAKS,QAC3E,sBAAKS,UAAWrB,EAAQuE,QAAxB,UACI,cAACnC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BlC,EAAKQ,UAC/B,cAACyB,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6B8C,IAAOhF,EAAKiF,WAAWC,eAExD,qBAAKhE,UAAWrB,EAAQ0E,SAAxB,SACI,cAACzB,EAAA,EAAD,CACIqC,MAAO,CAACpC,MAAM,SACdC,KAAK,QACLC,QAAS,kBAAMrD,EAAaI,EAAKM,MAHrC,SAKI,cAAC,IAAD,CAAe8E,SAAS,gBAGhC,qBAAKlE,UAAWrB,EAAQ6E,QAAxB,SACI,cAACzC,EAAA,EAAD,CAAYC,QAAQ,QAAQa,MAAM,gBAAlC,SAAmD/C,EAAKW,KAAK0E,KAAI,SAACC,GAAD,iBAAWA,EAAX,YAErE,cAACrD,EAAA,EAAD,CAAYC,QAAQ,KAAKqD,cAAY,EAACrE,UAAWrB,EAAQY,MAAzD,SAAiET,EAAKS,QACtE,cAAC+E,EAAA,EAAD,UACI,cAACvD,EAAA,EAAD,CAAYC,QAAQ,KAAKqD,cAAY,EAArC,SAAuCvF,EAAKU,YAEhD,eAAC+E,EAAA,EAAD,CAAavE,UAAWrB,EAAQ8E,YAAhC,UACI,eAAC7B,EAAA,EAAD,CAAQE,KAAK,QAAQD,MAAM,UAAUE,QAAS,kBAAInD,GHOzC3B,EGP2D6B,EAAKM,IHOjE,uCAAQ,WAAOR,GAAP,iBAAA0B,EAAA,+EAEHC,EAAatD,GAFV,gBAEjBuD,EAFiB,EAEjBA,KACP5B,EAAS,CAAC6B,KAAM,WAAYC,QAASF,IAHb,gDAKxBG,QAAQC,IAAR,MALwB,yDAAR,4DAAC3D,GGPT,UACI,cAAC,IAAD,CAAgBiH,SAAS,UAD7B,QAEYpF,EAAK0F,UAFjB,YAIA,eAAC5C,EAAA,EAAD,CAAQE,KAAK,QAAQD,MAAM,UAAUE,QAAS,kBAAInD,GHNvC3B,EGM2D6B,EAAKM,IHNjE,uCAAQ,WAAOR,GAAP,SAAA0B,EAAA,+EAEpBC,EAAetD,GAFK,OAG1B2B,EAAS,CAAE6B,KAAM5D,EAAS6D,QAASzD,IAHT,+CAK1B0D,QAAQC,IAAR,MAL0B,wDAAR,4DAAC3D,GGMX,UACI,cAAC,IAAD,CAAYiH,SAAS,UADzB,kB,aCpCT,SAASO,GAAT,GAAgC,IAAhB/F,EAAe,EAAfA,aACbC,EAAUqD,IACV/C,EAAQF,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAC3C,OACKA,EAAMyF,OACH,cAACC,EAAA,EAAD,CAAM3E,UAAWrB,EAAQiG,UAAWA,WAAS,EAAC1C,WAAW,UAAUrE,QAAS,EAA5E,SACKoB,EAAMkF,KAAI,SAACrF,GAAD,OACP,cAAC6F,EAAA,EAAD,CAAqBE,GAAI,GAAIC,GAAI,EAAGC,MAAI,EAAxC,SACI,cAACrB,EAAD,CAAM5E,KAAMA,EAAMJ,aAAcA,KADzBI,EAAKM,UAHZ,cAAC4F,EAAA,EAAD,I,aCRXC,GAAexH,aAAW,SAACC,GAAD,qBACnCwH,OAAQ,CACJlC,aAAc,GACdpF,OAAQ,SACRK,QAAS,OACT8E,cAAe,MACf5E,eAAgB,SAChB+D,WAAY,UAEhBiD,QAAS,CACLtD,MAAO,sBAEXgC,MAAO,CACHuB,WAAY,SAEf1H,EAAM2H,YAAYC,KAAK,MAAQ,CAC5BrD,cAAe,CACXc,cAAe,uBCuBZwC,OAhCf,WAEE,IAAM5G,EAAUsG,KACVrG,EAAWC,cAHJ,EAIoBQ,mBAAS,MAJ7B,mBAINZ,EAJM,KAIIC,EAJJ,KAUb,OAJAmB,qBAAU,WACRjB,ENZoB,uCAAM,WAAOA,GAAP,iBAAA0B,EAAA,+EJAEnD,IAAMqI,IAAIzI,GIAZ,gBAEfyD,EAFe,EAEfA,KAEP5B,EAAS,CAAC6B,KAAM3D,EAAW4D,QAASF,IAJd,gDAMtBG,QAAQC,IAAI,KAAMpB,SANI,yDAAN,yDManB,CAACf,EAAYG,IAGd,eAAC6G,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,eAACC,EAAA,EAAD,CAAQ3F,UAAWrB,EAAQuG,OAAQjC,SAAS,SAASpB,MAAM,UAA3D,UACE,cAACd,EAAA,EAAD,CAAYf,UAAWrB,EAAQwG,QAASnE,QAAQ,KAAK4E,MAAM,SAA3D,sBACA,qBAAK5F,UAAWrB,EAAQkF,MAAOgC,IAAKC,EAAUC,IAAI,WAAWvD,OAAO,UAEtE,cAACwD,EAAA,EAAD,CAAMC,IAAE,EAAR,SACE,cAACR,EAAA,EAAD,UACE,eAACd,EAAA,EAAD,CAAMC,WAAS,EAAC5E,UAAWrB,EAAQsD,cAAgBC,WAAW,UAAUrE,QAAS,EAAjF,UACE,cAAC8G,EAAA,EAAD,CAAMI,MAAI,EAACF,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACL,GAAD,CAAO/F,aAAcA,MAEvB,cAACiG,EAAA,EAAD,CAAMI,MAAI,EAACF,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACtG,EAAD,CAAMC,UAAWA,EAAWC,aAAcA,iBCrBzCwH,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2BCWCQ,GAhBC,WAAyB,IAAxB1H,EAAuB,uDAAf,GAAI2H,EAAW,uCACpC,OAAQA,EAAOnG,MACX,KAAK7D,EACD,IAAK,WACD,OAAOqC,EAAMkF,KAAK,SAAArF,GAAI,OAAIA,EAAKM,MAAQwH,EAAOlG,QAAQtB,IAAMwH,EAAOlG,QAAU5B,KACrF,KAAKhC,EACD,OAAO8J,EAAOlG,QAClB,KAAK/D,EACD,MAAM,GAAN,oBAAWsC,GAAX,CAAkB2H,EAAOlG,UAC7B,KAAK7D,EACD,OAAOoC,EAAM4H,QAAO,SAAC/H,GAAD,OAASA,EAAKM,MAAQwH,EAAOlG,WACrD,QACI,OAAOzB,ICVJ6H,gBAAgB,CAC3B7H,WCME8H,GAAQC,aAAYC,GAAUC,aAAQC,aAAgBC,QAI5DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJS,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.eb68888f.chunk.js","sourcesContent":["export const CREATE = 'CREATE'\nexport const UPDATE = 'UPDATE'\nexport const DELETE = 'DELETE'\nexport const FETCH_ALL = 'FETCH_ALL'\n","import axios from 'axios'\n\n\nconst url = 'https://memories-app-jakhongir.herokuapp.com/posts'\n\nexport const fetchPosts = () => axios.get(url)\nexport const createPost = (newPost) => axios.post(url, newPost)\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost)\nexport const deletePost = (id) => axios.delete(`${url}/${id}`)\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`)","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useFormStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n        },\n      },\n      paper: {\n        padding: theme.spacing(2),\n      },\n      form: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n      },\n      fileInput: {\n        width: '97%',\n        margin: '10px 0',\n      },\n      buttonSubmit: {\n        marginBottom: 10,\n      },\n}))","import React,{useState, useEffect} from 'react'\nimport {useFormStyles} from './styles'\nimport {TextField, Button, Typography, Paper} from '@material-ui/core'\nimport FileBase from 'react-file-base64'\nimport {useDispatch} from 'react-redux'\nimport { createPost, updatePost } from '../../actions/posts'\nimport {useSelector} from 'react-redux'\n\nexport function Form({currentId, setCurrentId}) {\n    const classes = useFormStyles()\n    const dispatch = useDispatch()\n    const post = useSelector((state)=> currentId ? state.posts.find((p) => p._id === currentId) : null)\n    const [postData, setPostData] = useState({creator: '', title: '', message: '', tags: '', selectedFile: ''})\n\n    useEffect(() => {\n        if(post){setPostData(post)}\n    }, [post])\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if(currentId){\n            dispatch(updatePost(currentId,postData)) \n        } else {\n            dispatch(createPost(postData))  \n        }\n        \n        clear()\n    }\n\n\n    const clear = () => {\n        setCurrentId(null)\n        setPostData({creator: '', title: '', message: '', tags: '', selectedFile: ''})\n    }\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete={false} noValidate className={classes.form} onSubmit={handleSubmit}>\n                <Typography variant='h6'>{ currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n                <TextField name='creator' variant='outlined' label='creator' fullWidth value={postData.creator} onChange={(e) => setPostData({...postData, creator: e.target.value})}/>\n                <TextField name='title' variant='outlined' label='title' fullWidth value={postData.title} onChange={(e) => setPostData({...postData, title: e.target.value})}/>\n                <TextField name='message' variant='outlined' label='message' fullWidth value={postData.message} onChange={(e) => setPostData({...postData, message: e.target.value})}/>\n                <TextField name='tags' variant='outlined' label='tags' fullWidth value={postData.tags} onChange={(e) => setPostData({...postData, tags: e.target.value.split(',')})}/>\n                <div className={classes.fileInput}>\n                    <FileBase \n                        type='file'\n                        multiple={false}\n                        onDone={({base64}) => setPostData({...postData, selectedFile: base64}) }\n                    />\n                </div>\n                <Button \n                    className={classes.buttonSubmit} \n                    variant='contained' \n                    color='primary' \n                    size='large'\n                    type='submit'\n                    fullWidth \n                    > Submit </Button>\n                <Button variant='contained' color='secondary' size='small' fullWidth onClick={clear}>Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n","import {FETCH_ALL,CREATE,UPDATE,DELETE} from '../constants/actionTypes'\nimport * as api from '../api/index'\n\n\n// Action Creators\nexport const getPosts = () => async (dispatch) =>  {\n    try {\n        const {data} = await api.fetchPosts() \n        \n        dispatch({type: FETCH_ALL, payload: data})\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const {data} = await api.createPost(post)\n\n        dispatch({type: CREATE ,payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const {data} = await api.updatePost(id,post)\n\n        dispatch({ type: UPDATE , payload: data })\n\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id)\n        dispatch({ type: DELETE , payload: id})\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const {data} = await api.likePost(id)\n        dispatch({type: 'LIKEPOST', payload: data})\n    } catch (error) {\n        console.log(error)\n    }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const usePostsStyles = makeStyles((theme) => ({\n    mainContainer: {\n        display: 'flex',\n        alignItems: 'center',\n      },\n      smMargin: {\n        margin: theme.spacing(1),\n      },\n      actionDiv: {\n        textAlign: 'center',\n      },\n}))","import { makeStyles } from '@material-ui/core/styles';\n\nexport const usePostStyles = makeStyles((theme) => ({\n  media: {\n        height: 0,\n        paddingTop: '56.25%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        backgroundBlendMode: 'darken',\n      },\n      border: {\n        border: 'solid',\n      },\n      fullHeightCard: {\n        height: '100%',\n      },\n      card: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        borderRadius: '15px',\n        height: '100%',\n        position: 'relative',\n      },\n      overlay: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: 'white',\n      },\n      overlay2: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        color: 'white',\n      },\n      grid: {\n        display: 'flex',\n      },\n      details: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '20px',\n      },\n      title: {\n        padding: '0 16px',\n      },\n      cardActions: {\n        padding: '0 16px 8px 16px',\n        display: 'flex',\n        justifyContent: 'space-between',\n      },\n\n}))","import React from 'react'\nimport {usePostStyles} from './styles'\nimport {Card, CardActions, CardContent, CardMedia, Button, Typography} from '@material-ui/core'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport moment from 'moment'\nimport { useDispatch } from 'react-redux'\n\nimport {deletePost,likePost} from '../../../actions/posts'\n\nexport function Post({post, setCurrentId}) {\n    const classes = usePostStyles()\n    const dispatch = useDispatch()\n    return (\n        <Card className={classes.card}>\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\n            <div className={classes.overlay}>\n                <Typography variant='h6'>{post.creator}</Typography>\n                <Typography variant='body2'>{moment(post.createdAt).fromNow()}</Typography>\n            </div>\n            <div className={classes.overlay2}>\n                <Button \n                    style={{color:'white'}} \n                    size='small' \n                    onClick={() => setCurrentId(post._id)} \n                >\n                    <MoreHorizIcon fontSize='default' />\n                </Button>\n            </div>\n            <div className={classes.details}>\n                <Typography variant='body2' color='textSecondary'>{post.tags.map((tag)=>`#${tag} `)}</Typography>\n            </div>\n            <Typography variant='h5' gutterBottom className={classes.title}>{post.title}</Typography>\n            <CardContent>\n                <Typography variant='h5' gutterBottom>{post.message}</Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button size='small' color='primary' onClick={()=>dispatch(likePost(post._id))}>\n                    <ThumbUpAltIcon fontSize='small'/>\n                    &nbsp; {post.likeCount}  &nbsp;\n                </Button>\n                <Button size='small' color='primary' onClick={()=>dispatch(deletePost(post._id))}>\n                    <DeleteIcon fontSize='small' />\n                    Delete\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n","import React from 'react'\nimport {usePostsStyles} from './styles'\nimport {Post} from './Post/Post'\nimport {useSelector} from 'react-redux'\nimport {Grid, CircularProgress} from '@material-ui/core'\n\nexport function Posts({setCurrentId}) {\n    const classes = usePostsStyles()\n    const posts = useSelector((state) => state.posts )\n    return (\n        !posts.length ? <CircularProgress /> : (\n            <Grid className={classes.container} container alignItems='stretch' spacing={3}>\n                {posts.map((post) => (\n                    <Grid key={post._id} xs={12} sm={6} item>\n                        <Post post={post} setCurrentId={setCurrentId} />\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    )\n}\n","import {makeStyles} from '@material-ui/core/styles'\n\nexport const useAppStyles = makeStyles((theme) => ({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 0',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    heading: {\n        color: 'rgba(0,183,255, 1)',\n    },\n    image: {\n        marginLeft: '15px',\n    },\n    [theme.breakpoints.down('sm')]: {\n        mainContainer: {\n            flexDirection: 'column-reverse'\n        }\n    }\n}))","import React,{useEffect,useState} from 'react'\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core'\nimport {useDispatch} from 'react-redux'\n\nimport {getPosts} from './actions/posts'\nimport memories from './assets/memories.png'\nimport {Form} from './components/Form/Form'\nimport {Posts} from './components/Posts/Posts'\nimport {useAppStyles} from './useAppStyles'\n\nfunction App() {\n\n  const classes = useAppStyles()\n  const dispatch = useDispatch()\n  const [currentId,setCurrentId] = useState(null)\n\n  useEffect(() => {\n    dispatch(getPosts())\n  }, [currentId , dispatch])\n\n  return (\n    <Container maxwidth='lg'>\n      <AppBar className={classes.appBar} position='static' color='inherit'>\n        <Typography className={classes.heading} variant='h2' align='center'>Memories</Typography>\n        <img className={classes.image} src={memories} alt='memories' height='60' />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid container className={classes.mainContainer}  alignItems='stretch' spacing={3}>\n            <Grid item xs={12} sm={7} >\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId}/>\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {FETCH_ALL,CREATE,UPDATE,DELETE} from '../constants/actionTypes'\n\nconst reducer = (posts = [], action) => {\n    switch (action.type) {\n        case UPDATE:\n            case 'LIKEPOST':\n                return posts.map( post => post._id === action.payload._id ? action.payload : post)\n        case FETCH_ALL:\n            return action.payload\n        case CREATE:\n            return [...posts, action.payload]\n        case DELETE:\n            return posts.filter((post)=> post._id !== action.payload)\n        default:\n            return posts;\n    }\n}\n\nexport default reducer","import {combineReducers} from 'redux'\n\nimport posts from './posts'\n\nexport default combineReducers({\n    posts, \n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport {createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'  \n\nimport reducers from './reducers/index'\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}